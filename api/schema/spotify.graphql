# This file holds any and all types that map 1:1 with the Spotify interface, and
# NOTHING ELSE! Anything we define on top of the Spotify API should live in
# another file.

# These fields are all documented by Spotify so no need to document them here
# lint-disable fields-have-descriptions

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-artistobject
"""
type Artist implements Item {
  externalUrls: ExternalUrls! @juniper(infallible: true)
  # Skipping `followers`
  genres: [String!]! @juniper(infallible: true)
  href: String! @juniper(infallible: true)
  id: String! @juniper(infallible: true)
  images: [Image!]! @juniper(infallible: true)
  name: String! @juniper(infallible: true)
  popularity: Int! @juniper(infallible: true)
  uri: String! @juniper(infallible: true, ownership: "owned")
}

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedartistobject
"""
type ArtistSimplified {
  externalUrls: ExternalUrls! @juniper(infallible: true)
  href: String! @juniper(infallible: true)
  id: String! @juniper(infallible: true)
  name: String! @juniper(infallible: true)
  uri: String! @juniper(infallible: true, ownership: "owned")
}

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-simplifiedalbumobject
"""
type AlbumSimplified implements Item {
  albumGroup: String @juniper(infallible: true)
  albumType: String! @juniper(infallible: true)
  artists: [ArtistSimplified!]! @juniper(infallible: true)
  availableMarkets: [String!]! @juniper(infallible: true)
  externalUrls: ExternalUrls! @juniper(infallible: true)
  href: String! @juniper(infallible: true)
  id: String! @juniper(infallible: true)
  images: [Image!]! @juniper(infallible: true)
  name: String! @juniper(infallible: true)
  releaseDate: String! @juniper(infallible: true)
  releaseDatePrecision: String! @juniper(infallible: true)
  # Skipping `restrictions`
  uri: String! @juniper(infallible: true, ownership: "owned")
}

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-trackobject
"""
type Track implements Item {
  album: AlbumSimplified! @juniper(infallible: true)
  artists: [ArtistSimplified!]! @juniper(infallible: true)
  availableMarkets: [String!]! @juniper(infallible: true)
  discNumber: Int! @juniper(infallible: true)
  durationMs: Int! @juniper(infallible: true)
  explicit: Boolean! @juniper(infallible: true)
  # Skipping `externalIds`
  externalUrls: ExternalUrls! @juniper(infallible: true)
  href: String! @juniper(infallible: true)
  id: String! @juniper(infallible: true)
  isPlayable: Boolean @juniper(infallible: true)
  # Skipping `linkedFrom`
  name: String! @juniper(infallible: true)
  popularity: Int! @juniper(infallible: true)
  previewUrl: String @juniper(infallible: true)
  trackNumber: Int! @juniper(infallible: true)
  uri: String! @juniper(infallible: true, ownership: "owned")
}

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-externalurlobject
"""
type ExternalUrls {
  spotify: String! @juniper(infallible: true)
}

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-imageobject
"""
type Image {
  height: Int @juniper(infallible: true)
  url: String! @juniper(infallible: true)
  width: Int @juniper(infallible: true)
}

"""
Spotify API type
https://developer.spotify.com/documentation/web-api/reference/#object-privateuserobject
"""
type PrivateUser {
  displayName: String @juniper(infallible: true)
  href: String! @juniper(infallible: true)
  id: String! @juniper(infallible: true)
  images: [Image!]! @juniper(infallible: true)
  uri: String! @juniper(infallible: true, ownership: "owned")
}
