name: Build and Deploy to Docker

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  check-api:
    name: "Check API"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache cargo files
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('api/rust-toolchain') }}

      - name: Cache rust build files
        uses: actions/cache@v2
        with:
          path: api/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('api/Cargo.lock') }}

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path api/Cargo.toml

      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --manifest-path api/Cargo.toml -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --manifest-path api/Cargo.toml -- -D clippy::all

  check-ui:
    name: "Check UI"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache npm files
        uses: actions/cache@v2
        with:
          path: ui/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('ui/package-lock.json') }}

      - name: npm install
        working-directory: ui/
        run: npm install

      - name: Type-check
        working-directory: ui/
        run: npm run type-check

      - name: Lint
        working-directory: ui/
        run: npm run lint

  build-api:
    name: "Build & Push API Image"
    runs-on: ubuntu-latest
    needs:
      - check-api
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API image
        uses: docker/build-push-action@v2
        with:
          context: ./api/
          file: ./api/prd.Dockerfile
          tags: |
            ghcr.io/lucaspickering/laulud-api:latest
            ghcr.io/lucaspickering/laulud-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.ref == 'refs/heads/master' }}

  build-ui:
    name: "Build & Push UI Image"
    runs-on: ubuntu-latest
    needs:
      - check-ui
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push UI image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./ui/prd.Dockerfile
          tags: |
            ghcr.io/lucaspickering/laulud-static:latest
            ghcr.io/lucaspickering/laulud-static:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.ref == 'refs/heads/master' }}
